@model Inspired.Web.ViewModel.MaterialViewModel
@{
    ViewBag.Title = "Create Material";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- DataTables CSS -->
<link href="~/Content/DataTables-1.10.1/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />

<!-- DataTables -->
<script type="text/javascript" charset="utf8" src="~/Scripts/DataTables-1.10.1/jquery.dataTables.js"></script>
<script src="~/Scripts/DataTables-1.10.1/dataTables.tableTools.js"></script>
<h2>Create Material</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="col-md-2">
                @Html.LabelFor(m => m.Material.Code, new { @class = "control-label" })
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(m=>m.Material.Id)
                @Html.TextBoxFor(m => m.Material.Code, new { @class = "form-control", placeholder = "Item code" })
                @Html.ValidationMessageFor(m => m.Material.Code)
            </div>
        </div>
        <div class="row-fluid">
            <div class="col-md-2">
                @Html.LabelFor(m => m.Material.Description, new { @class = "control-label" })
            </div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Material.Description, new { @class = "form-control", placeholder = "Item description" })
                @Html.ValidationMessageFor(m => m.Material.Description)
            </div>
        </div>
        <div class="row-fluid">
            <div class="col-md-12">
                <div class="nav nav-tabs" id="itemTabs">
                    <div class="col-md-12">
                        <ul class="nav navbar-nav">
                            <li><a href="#Category" data-id="Category" data-toggle="tab">Categories</a></li>
                            <li><a href="#Specification" data-id="Specification" data-toggle="tab">Specification</a></li>
                            <li></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-content" id="tabs" >
            <div class="tab-pane" id="Category" data-id="Category" >
                <div class="row-fluid">
                    <div class="col-md-12">
                        <div class="container-fluid">
                            <div class="row-fluid">
                                <div class="col-md-3">
                                    @Html.LabelFor(m => m.catCode, new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.Material.Inv_MaterialCategory.FirstOrDefault().Category_Type, Model.CategoryTypes, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.CategoryTypes)
                                </div>
                                <div class="col-md-4 col-sm-12">
                                    @Html.LabelFor(m => m.catCode, new { @class = "control-label" })
                                    @Html.HiddenFor(m => m.catId)
                                    @Html.TextBoxFor(m => m.catCode, new { @class = "form-control", @onblur = "fetchCategory();" })
                                    @Html.ValidationMessageFor(m => m.catCode)
                                </div>
                                <div class="col-md-4 col-sm-12">
                                    @Html.LabelFor(m => m.catDescription, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.catDescription, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.catDescription)
                                </div>
                                <div class="col-md-1 col-sm-12">
                                    <br />
                                    <input type="button" class="btn btn-success" value="Add" onclick="AddCategory()" />
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="col-md-12">
                                    <br />
                                    <input type="button" class="btn btn-warning" value="Delete" onclick="DeleteCategory()" />
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="col-md-12">
                                    <table class="table" id="CategoryTable">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Category Type</th>
                                                <th>Category Code</th>
                                                <th>Category Description</th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.Material != null)
                                            {
                                                foreach (var cat in Model.Material.Inv_MaterialCategory)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => cat.Category_Type)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => cat.Gen_LookupItem.Description)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => cat.Inv_CategoryMaster.Code)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => cat.Inv_CategoryMaster.Description)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => cat.Category_Id)
                                                        </td>
                                                        <td>
                                                                                                                
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="Specification" data-id="Specification">
                test
            </div>
        </div>
        <div class="row-fluid">
            <div class="col-md-12">
                <input type="button" class="btn btn-primary" value="Save" onclick="Item_Save()" />
            </div>            
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/antiforgerytoken")
}
<script type="text/javascript">
    $(function () {
        $('#Category').addClass('active');
        var catTable = $('#CategoryTable').DataTable({
            //"aoColumns": [{ "sWidth": "1%" }, { "sWidth": "25%" }, { "sWidth": "15%" }, { "sWidth": "55%" }, {"sWidth":"0%"}],
            "dom": '<"top"i>rt<"bottom"flp><"clear">',
            "columnDefs": [
                              {
                                  "targets": [ 0 ],
                                  "visible": false,
                                  "searchable": false
                              },
                              {
                                  "targets": [ 4 ],
                                  "visible": false
                              }
                          ],
            "oTableTools": {
                "sSwfPath": "~/Content/DataTables-1.10.1/swf/copy_csv_xls.swf",
                "sRowSelect": "single",
                "sSelectedClass": "row_selected",
                "sAutoWidth": "false"
            }
        });
        $('#CategoryTable tbody').on('click', 'tr',
        function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                $('#CategoryTable').dataTable().$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
       
            var tt = new $.fn.dataTable.TableTools(catTable);
            var oTT = TableTools.fnGetInstance('CategoryTable');
            var sRow = catTable.$('tr.selected');
            $("#catCode").val($.trim(sRow[0].cells[2].innerHTML.toString()));
            $("#catDescription").val($.trim(sRow[0].cells[3].innerHTML.toString()));
            $("#catId").val($.trim(sRow[0].cells[4].innerHTML.toString()));
            $("#Category_Type").append(new Option($.trim(sRow[0].cells[1].innerHTML.toString()), $.trim(sRow[0].cells[0].innerHTML.toString()), false, true));            
            $('#CategoryTable').dataTable().fnDeleteRow(sRow[0]);

        });


    });
    function DeleteCategory() {
        $('#catCode').val('');
        $('#catDescription').val('');
    }
    function AddCategory() {
        if ($('#Category_Type').val() == null)
        {
            alert("Enter a valid Category Type");
            $('#Category_Type').focus();
            return false;
        }
        else if ($('#catCode').val() == '')
        {
            alert("Enter a valid Category code");
            $('#catCode').focus();
            return false;
        }
        else if ($('#catDescription').val() == '')
        {
            alert("Enter a valid Category Description");
            $('#catDescription').focus();
            return false;
        }

        $('#CategoryTable').dataTable().fnAddData([$("#Category_Type").val(), $("#Category_Type option:selected").text(), $("#catCode").val(), $("#catDescription").val(), $("#catId").val(),"Added"]);
        $("#catCode").val("");
        $("#catDescription").val("");
        $("#catId").val("");
        $("#Category_Type option:selected").remove();        
    }

    function fetchCategory() {
        var categoryType = $("#Category_Type").val();
        var categoryCode = $("#catCode").val();
        $.ajax({
            context: document.body,
            data: addAntiForgeryToken({ catType: categoryType, catCode: categoryCode }),
            error: function (e) { alert(e.Message); },
            success: function (data) {
                if (data.success == true) {
                    $('#catDescription').val(data.CategoryDescription)
                    $('#catId').val(data.id);
                } else if (data.success == false) {
                    alert(data.Message);
                }
            },
            type: 'POST',
            url: 'fetchCategoryJSON'
        });
    }


    function Item_Save()
    {
        var Material ={"Item":""};
        var ItemCategory = { "ItemId": "", "CatId": "", "CategoryType": "", "CategoryCode": "", "CategoryDescription": "" };
        var Item = { "Id": "", "Code": "", "Description": "", "ItemCategory": [] };
        Item.Id = $("#Material_Id").val();
        Item.Code = $("#Material_Code").val();
        Item.Description = $("#Material_Description").val();

        var oTable = $('#CategoryTable').dataTable().fnGetData();

        for(var i =0;i<oTable.length;i++)
        {
            ItemCategory.ItemId = Item.id;
            ItemCategory.CategoryType = oTable[i][0];
            ItemCategory.CategoryCode = oTable[i][2];
            ItemCategory.CategoryDescription = oTable[i][3];
            ItemCategory.CatId = oTable[i][4];
            Item.ItemCategory.push(ItemCategory);
        }

        Material.Item = Item;
        $.ajax({
            type: "POST",
            url: 'SaveMaterial',
            data:' { data: ' + JSON.stringify(Item) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (e) { alert(e.Message); },
            success: function (data) {
                if (data.success == true)
                    window.location.href = "/Inventory/MaterialList";
                else
                    alert(data.Message);
            }
        });
    }
</script>

